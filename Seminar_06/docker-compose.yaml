# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    # проброс портов
    ports:
      - "80:80"
    volumes:
       - ./code:/data/mysite.local
       - ./nginx/hosts:/etc/nginx/conf.d
    networks:
      - my_network
    depends_on:
      - application

  #Контейнер с PHP-FPM, назовём его app
  application:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: application # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
    networks:
      - my_network
    depends_on:
      mysql:
        condition: service_healthy

   #Контейнер с PHP-FPM, назовём его app
  cli:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./cli
      dockerfile: Dockerfile
    image: myapp/php-cli # имя будущего образа
    container_name: cli # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
    networks:
      - my_network

  #Контейнер с базой данных MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: geekbrains
    ports:
      - "3306:3306"
    volumes:
      - ./DB:/var/lib/mysql
      - ./dump:/docker-entrypoint-initdb.d
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

#Docker Networks
networks:
  my_network:
    driver: bridge